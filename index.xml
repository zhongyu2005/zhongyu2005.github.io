<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spade Three</title>
    <link>http://zhongyu2005.github.io/</link>
    <description>Recent content on Spade Three</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Oct 2019 18:17:55 +0800</lastBuildDate>
    
	<atom:link href="http://zhongyu2005.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git</title>
      <link>http://zhongyu2005.github.io/posts/git/</link>
      <pubDate>Wed, 30 Oct 2019 18:17:55 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/git/</guid>
      <description>start  git init (初始化空仓库) git clone xxx (从远程仓库克隆一份到本地) git add xxx (加入仓库) git rm xxx (从仓库删除) git commit -m &amp;ldquo;commit xxx&amp;rdquo; (提交到仓库) git push (上传到远程仓库) git status (查看git 仓库的状态.) git diff (查看提交文件内容改动) git log (查看提交历史) git fetch (更新)  reset  git reset &amp;ndash;hard commit_id (回退到指定版本) git checkout xxx (回退文件到当前的版本，放弃修改。) git reset HEAD xxx (取消文件 add)  branch  git branch (查看本地分支) git branch -a (查看远程分支) git branch xxx (创建分支) git checkout xxx (切换分支) git switch xxx (切换分支) git checkout -b xxx (创建并切换分支) git switch -c xxx (创建并切换分支) git merge xxx (把xxx分支合并到当前分支) git pull origin xxx (把xxx分支合并到当前分支) git branch -d xx (删除分支)  stash  git stash （把当前修改存储） git stash list （查看stash） git stash apply stash@{0} (还原stash修改) git stash drop stash@{0} (丢弃stash) git stash pop stash@{0} （还原stash修改并丢弃）  tag  git tag xxx commit(根据commit打tag,没有则当前) git tag （查看tag) git show xxx (查看tag的内容) git tag -d xxx (删除tag)  config  git config &amp;ndash;global user.</description>
    </item>
    
    <item>
      <title>Git Book</title>
      <link>http://zhongyu2005.github.io/posts/git-book/</link>
      <pubDate>Wed, 30 Oct 2019 18:17:52 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/git-book/</guid>
      <description> start  安装node &amp;amp; npm 设置npm 国内源。 https://npm.taobao.org/ 安装 gitbook-cli .[cnpm install -g gitbook-cli] 确认是否安装。gitbook -V  config  gitbook init.生成首页和结构页 编辑 SUMMARY.md.（结构页） 再次gitbook init。生成对应文件。 根据文件md格式，编写电子书。
# Summary * [简单介绍](README.md) * [第一章](chapter1/README.md) * [第一节](chapter1/section1.md) * [第二节](chapter1/section2.md) * [第二章](chapter2/README.md) * [第一节](chapter2/section1.md) * [第二节](chapter2/section2.md) * [结束](end/README.md)   generate  gitbook serve 。本地预览 gitbook build —output=./dist/v1 生成book文件夹. 还可以直接生成pdf  </description>
    </item>
    
    <item>
      <title>Py Supervisor</title>
      <link>http://zhongyu2005.github.io/posts/py-supervisor/</link>
      <pubDate>Wed, 30 Oct 2019 18:11:51 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/py-supervisor/</guid>
      <description>start  pip3 install supervisor echo_supervisord_conf &amp;gt; /etc/supervisor/supervisord.conf vim supervisord.conf(，开启include，set user pass。http) supervisord -c supervisord.conf （，启动） 参考配置如下 localhost:9001端口
[program:test] command=/usr/bin/php -r &amp;quot;echo date(&#39;Ymd H:i:s&#39;),PHP_EOL;&amp;quot; ; the program (relative uses PATH, can take args) process_name=%(process_num)s ; process_name expr (default %(program_name)s) numprocs=1 ; number of processes copies to start (def 1) directory=/opt/www ; directory to cwd to before exec (def no cwd) priority=999 ; the relative start priority (default 999) autostart=true ; start at supervisord start (default: true) autorestart=true ; when to restart if exited after running (def: unexpected) user=zhongyu ; setuid to this UNIX account to run the program redirect_stderr=true ; redirect proc stderr to stdout (default false) stdout_logfile=/var/log/supervisor/test.</description>
    </item>
    
    <item>
      <title>Php Mongodb</title>
      <link>http://zhongyu2005.github.io/posts/php-mongodb/</link>
      <pubDate>Wed, 30 Oct 2019 18:05:08 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-mongodb/</guid>
      <description>mongodb gis  https://github.com/mongodb/mongo-php-library // 加入composer支持 require_once __DIR__ . &amp;quot;/vendor/autoload.php&amp;quot;; $action=&#39;&#39;; if($action==&#39;setIndex&#39;){ $collection = ( new MongoDB\Client )-&amp;gt;momo-&amp;gt;user; $result = $collection-&amp;gt;createIndex(array(&#39;loc&#39;=&amp;gt;&#39;2dsphere&#39;)); var_dump( $result ); exit; } if($acion==&#39;create&#39;){ $collection = ( new MongoDB\Client )-&amp;gt;momo-&amp;gt;user; $longitude=&#39;113.281777&#39;; $latitude=&#39;23.171306&#39;; $i=2; //id=1,113.332406,23.123305 $insert = $collection-&amp;gt;insertOne( [ &#39;_id&#39; =&amp;gt; $i, &#39;loc&#39; =&amp;gt; array( &#39;type&#39; =&amp;gt; &#39;Point&#39;, &#39;coordinates&#39; =&amp;gt; array( floatval( $longitude ), floatval( $latitude ) ), ), ]); var_dump( $insert ); } if($action==&#39;query&#39;){ $database = ( new MongoDB\Client )-&amp;gt;momo; $cursor = $database-&amp;gt;command( array( &#39;geoNear&#39; =&amp;gt; &#39;user&#39;, &#39;near&#39; =&amp;gt; array( &#39;type&#39; =&amp;gt; &#39;Point&#39;, &#39;coordinates&#39; =&amp;gt; array( 113.</description>
    </item>
    
    <item>
      <title>Php Amqp</title>
      <link>http://zhongyu2005.github.io/posts/php-amqp/</link>
      <pubDate>Wed, 30 Oct 2019 17:20:14 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-amqp/</guid>
      <description>rabbitmqctl rabbitmq-server start rabbitmq-server status rabbitmq-server stop 简单管理 查看所有用户 rabbitmqctl list_users 查看某个用户的权限 rabbitmqctl list_user_permissions username 删除某个用户 rabbitmqctl list_user_permissions username 添加某个用户 rabbitmqctl add_user username password 设置用户tag rabbitmqctl set_user_tags username administrator 授权某个用户 rabbitmqctl set_permissions -p / username &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; 开启web管理界面 127.0.0.1:15672 rabbitmq-plugins enable rabbitmq_management  php-amqp #安装好phpamqp的扩展 $config=[ &#39;host&#39; =&amp;gt; &#39;127.0.0.1&#39;, &#39;port&#39; =&amp;gt; 5672, &#39;login&#39; =&amp;gt; &#39;username&#39;, &#39;password&#39; =&amp;gt; &#39;your pass&#39;, &#39;vhost&#39; =&amp;gt; &#39;/&#39;, &#39;heartbeat&#39; =&amp;gt; 60, ] 删除某个Exchange 和 Queue $con = new \AMQPConnection($config); $con-&amp;gt;connect(); $channel = new \AMQPChannel($con); $exchange = new \AMQPExchange($channel); $exchange-&amp;gt;delete(&#39;your exchange name&#39;); $queue = new \AMQPQueue($channel); $queue-&amp;gt;setName(&#39;your queue name&#39;); $queue-&amp;gt;delete(); $con-&amp;gt;disconnect();  重试队列1 （注意expiration 时间，可能受队列先后顺序影响.</description>
    </item>
    
    <item>
      <title>Php Redis</title>
      <link>http://zhongyu2005.github.io/posts/php-redis/</link>
      <pubDate>Wed, 30 Oct 2019 17:10:14 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-redis/</guid>
      <description>php connect $host=&#39;127.0.0.1&#39;; $port=&#39;6389&#39;; $password=&#39;pass&#39;; $redis=new \Redis(); $redis-&amp;gt;connect($host,$port,100); //$redis-&amp;gt;auth($password); $redis-&amp;gt;select(0);  cache $redis-&amp;gt;set(&amp;quot;abc&amp;quot;,100); $timeout=10; $redis-&amp;gt;set(&amp;quot;abc&amp;quot;,100,$timeout); $val=$redis-&amp;gt;get(&#39;abc&#39;);  queue // 队列入 $redis-&amp;gt;lPush(&amp;quot;abc_list&amp;quot;,&amp;quot;ck1&amp;quot;); $redis-&amp;gt;lPush(&amp;quot;abc_list&amp;quot;,&amp;quot;ck2&amp;quot;); //队列出. $val=$redis-&amp;gt;rPop(&amp;quot;abc_list&amp;quot;); //防超时 守护进程 出队列设计 $dbConn=false; while (true) { $key=&#39;xxx&#39;; try { while ($val = $redis-&amp;gt;rPop($key)) { if($dbConn){ //close db //open db $dbConn=false; } #code... } }catch (\Exception $e){ #code... # retry data $redis-&amp;gt;rPush(&amp;quot;$key&amp;quot;,$val); } sleep(5); $dbConn=true; }  gis  cli //add 地理位置坐标 geoadd cities:locations 113.332406 23.</description>
    </item>
    
    <item>
      <title>Php Db</title>
      <link>http://zhongyu2005.github.io/posts/php-db/</link>
      <pubDate>Tue, 29 Oct 2019 19:09:38 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-db/</guid>
      <description>php sqlite public function getSqlite($path) { if (empty($this-&amp;gt;dbs[$path])) { $this-&amp;gt;dbs[$path] = new \SQLite3($path); } return $this-&amp;gt;dbs[$path]; } public function dbExec($db, $sql,$bindParam) { $sm=$db-&amp;gt;prepare($sql); if(!empty($bindParam)){ foreach ($bindParam as $key=&amp;gt;$val) { $sm-&amp;gt;bindValue($key, $val); } } return $sm-&amp;gt;execute(); // $db-&amp;gt;lastErrorMsg() } public function dbQueryOne($db, $sql,$bindParam) { $sm=$db-&amp;gt;prepare($sql); if(!empty($bindParam)){ foreach ($bindParam as $key=&amp;gt;$val) { $sm-&amp;gt;bindValue($key, $val); } } $res = $sm-&amp;gt;execute(); $row = $res-&amp;gt;fetchArray(SQLITE3_ASSOC); return $row; } public function dbQueryAll($db, $sql,$bindParam) { $sm=$db-&amp;gt;prepare($sql); if(!</description>
    </item>
    
    <item>
      <title>Php Upload</title>
      <link>http://zhongyu2005.github.io/posts/php-upload/</link>
      <pubDate>Tue, 29 Oct 2019 19:04:51 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-upload/</guid>
      <description>upload php $file = $_FILES[&#39;file&#39;]; if (empty($file)) { return log(&amp;quot;未获取到上传数据&amp;quot;, 1); } $maxSize = 1024 * 1024 * 3;//3m if ($file[&#39;size&#39;] &amp;gt; $maxSize) { return log(&amp;quot;上传数据大小超过限制&amp;quot;, 1); } if (!in_array($file[&#39;type&#39;], [&#39;image/jpeg&#39;, &#39;image/png&#39;, &#39;image/gif&#39;])) { log(&amp;quot;上传文件类型不正确&amp;quot;, 1); } $suffix = pathinfo($file[&#39;name&#39;], PATHINFO_EXTENSION); //文件后缀 $suffix = strtolower($suffix); if (!in_array($suffix, array(&#39;jpg&#39;, &#39;png&#39;, &#39;gif&#39;, &#39;jpeg&#39;))) { return log(&amp;quot;上传文件类型不正确&amp;quot;, 1); } $path = __DIR__ . &#39;/img&#39;; $name = &#39;/&#39; . date(&amp;quot;Ym&amp;quot;) . &#39;/&#39; . md5(uniqid(&#39;dp&#39;, true)) .</description>
    </item>
    
    <item>
      <title>Php Date</title>
      <link>http://zhongyu2005.github.io/posts/php-date/</link>
      <pubDate>Tue, 29 Oct 2019 18:54:57 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-date/</guid>
      <description> php date $date = new \DateTime(null, new \DateTimeZone(&amp;quot;PRC&amp;quot;)); $ymd = $date-&amp;gt;format(&amp;quot;Y-m-d H:i:s&amp;quot;); $time = $date-&amp;gt;getTimestamp(); $date-&amp;gt;modify(&amp;quot;-1 day -1 hour &amp;quot;);//减一天，减一个小时 $date-&amp;gt;modify(&amp;quot;this week today&amp;quot;);//本周第一天，周一开始，仅保留年月日 $diff=$date-&amp;gt;diff(new \DateTime(&#39;20191001&#39;,new \DateTimeZone(&amp;quot;PRC&amp;quot;))); $s=$diff-&amp;gt;format(&amp;quot;相差%Y年%m月%d日 %H时%i分%s秒&amp;quot;);  </description>
    </item>
    
    <item>
      <title>Php Curl</title>
      <link>http://zhongyu2005.github.io/posts/php-curl/</link>
      <pubDate>Tue, 29 Oct 2019 18:48:41 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-curl/</guid>
      <description>curl commonfunc function http($url, $data, $params = [], &amp;amp;$error) { $timeout = isset($params[&#39;timeout&#39;]) ? $params[&#39;timeout&#39;] : 10; // 默认超时时间是10秒 $curl = curl_init(); curl_setopt($curl, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_TIMEOUT, $timeout); //超时时间 curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 0); //在发起连接前等待的时间，如果设置为0，则不等待 if (!empty($data)) { curl_setopt($curl, CURLOPT_POST, 1); curl_setopt($curl, CURLOPT_POSTFIELDS, $data); } curl_setopt($curl, CURLOPT_SSLVERSION, 1); //升级ssl curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); //ssl curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); //ssl curl_setopt($curl, CURLINFO_HEADER_OUT, true); $UserAgent = &#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.</description>
    </item>
    
    <item>
      <title>Php Ip</title>
      <link>http://zhongyu2005.github.io/posts/php-ip/</link>
      <pubDate>Tue, 29 Oct 2019 18:47:31 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-ip/</guid>
      <description> php getId function getIP() { if (isset($_SERVER)) { if (isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;])) { $realip = $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]; } elseif (isset($_SERVER[&#39;HTTP_CLIENT_IP&#39;])) { $realip = $_SERVER[&#39;HTTP_CLIENT_IP&#39;]; } else { $realip = $_SERVER[&#39;REMOTE_ADDR&#39;]; } } else { if (getenv(&amp;quot;HTTP_X_FORWARDED_FOR&amp;quot;)) { $realip = getenv( &amp;quot;HTTP_X_FORWARDED_FOR&amp;quot;); } elseif (getenv(&amp;quot;HTTP_CLIENT_IP&amp;quot;)) { $realip = getenv(&amp;quot;HTTP_CLIENT_IP&amp;quot;); } else { $realip = getenv(&amp;quot;REMOTE_ADDR&amp;quot;); } } if(empty($realip) || strtolower($realip)==&#39;unknown&#39;){ return &#39;&#39;; } return $realip; }  </description>
    </item>
    
    <item>
      <title>Php Filter</title>
      <link>http://zhongyu2005.github.io/posts/php-filter/</link>
      <pubDate>Tue, 29 Oct 2019 18:35:24 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-filter/</guid>
      <description>filter 验证 ip $ip = &amp;quot;192.168.0.1&amp;quot;; //$ip = &amp;quot;2001:0db8:85a3:08d3:1319:8a2e:0370:7334&amp;quot;; if(!filter_var($ip, FILTER_VALIDATE_IP,FILTER_FLAG_IPV6)){ echo &amp;quot;IP is not valid&amp;quot;; }else { echo &amp;quot;IP is valid&amp;quot;; }  filter 验证 email $email = &amp;quot;someone@example.com&amp;quot;; if(!filter_var($email, FILTER_VALIDATE_EMAIL)){ echo &amp;quot;E-mail is not valid&amp;quot;; }else{ echo &amp;quot;E-mail is valid&amp;quot;; }  filter 验证 email $email = &amp;quot;someone@example.com&amp;quot;; if(!filter_var($email, FILTER_VALIDATE_EMAIL)){ echo &amp;quot;E-mail is not valid&amp;quot;; }else{ echo &amp;quot;E-mail is valid&amp;quot;; }  filter 验证 email $url = &amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Php Composer</title>
      <link>http://zhongyu2005.github.io/posts/php-composer/</link>
      <pubDate>Tue, 29 Oct 2019 18:14:49 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-composer/</guid>
      <description>composer php -r &amp;quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&amp;quot; php -r &amp;quot;if (hash_file(&#39;sha384&#39;, &#39;composer-setup.php&#39;) === &#39;a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1&#39;) { echo &#39;Installer verified&#39;; } else { echo &#39;Installer corrupt&#39;; unlink(&#39;composer-setup.php&#39;); } echo PHP_EOL;&amp;quot; php composer-setup.php php -r &amp;quot;unlink(&#39;composer-setup.php&#39;);&amp;quot; echo @php &amp;quot;%~dp0composer.phar&amp;quot; %*&amp;gt;composer.bat composer -V php composer.phar self-update  composer use  php composer.phar create-project doctrine/orm path 2.2.* AND php composer.phar require xxx php composer.phar remove xxx OR edit composer.json php composer.phar install php composer.phar update php composer.</description>
    </item>
    
    <item>
      <title>Php Ini</title>
      <link>http://zhongyu2005.github.io/posts/php-ini/</link>
      <pubDate>Tue, 29 Oct 2019 17:55:38 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-ini/</guid>
      <description>ini_set ini_set(&#39;display_errors&#39;, true);//开启错误信息显示 ini_set(&amp;quot;error_log&amp;quot;, __DIR__.&#39;/&#39;. date(&#39;Y-m-d&#39;) . &amp;quot;.log&amp;quot;);//设置php错误路径 ini_set(&#39;date.timezone&#39;,&#39;Asia/Shanghai&#39;); ini_set(&#39;max_execution_time&#39;, 0);//不限制执行时间 ini_set(&#39;magic_quotes_runtime&#39;, 0);//关闭自动反斜线转移引号 ini_set(&#39;memory_limit&#39;, &#39;512M&#39;); ignore_user_abort(true); // 后台运行 set_time_limit(0); // 取消脚本运行时间的超时上限  header  header(&amp;quot;Content-type: text/html; charset=utf-8&amp;quot;); header(&#39;Content-Type:application/json; charset=utf-8&#39;); header(&#39;Access-Control-Allow-Origin:*&#39;); header(&amp;quot;Access-Control-Allow-Methods&amp;quot;,&amp;quot;POST&amp;quot;); header(&amp;quot;Access-Control-Allow-Credentials&amp;quot;,&amp;quot;true&amp;quot;); header(&#39;Access-Control-Allow-Headers:x-requested-with,content-type&#39;); header(&amp;quot;HTTP/1.1 404 Not Found&amp;quot;); header(&amp;quot;Status: 404 Not Found&amp;quot;);  memory  function getMemory($real = false) { $size = memory_get_usage($real); $unit = array(&#39;b&#39;, &#39;kb&#39;, &#39;mb&#39;, &#39;gb&#39;, &#39;tb&#39;, &#39;pb&#39;); return @round($size / pow(1024, ($i = floor(log($size, 1024)))), 2) .</description>
    </item>
    
    <item>
      <title>welcome</title>
      <link>http://zhongyu2005.github.io/posts/welcome/</link>
      <pubDate>Tue, 29 Oct 2019 12:51:26 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/welcome/</guid>
      <description> Welcom to spade. hugo help
hugo version hugo new site xxx hugo new posts/welcome.md hugo server -D hugo (cp -R public ../../spade.github.io)  config.tomal
baseURL = &amp;quot;http://zhongyu2005.github.io&amp;quot; languageCode = &amp;quot;en-us&amp;quot; title = &amp;quot;Spade Three&amp;quot; theme = &amp;quot;ananke&amp;quot; [taxonomies] tag = &amp;quot;tags&amp;quot;  posts/welcome.md
--- title: &amp;quot;welcome&amp;quot; date: 2019-10-29T12:51:26+08:00 tags: [&amp;quot;welcome&amp;quot;] --- Welcom to spade. xxxx  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://zhongyu2005.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://zhongyu2005.github.io/about/</guid>
      <description>spade please.
php
ok ini,composer,filter,ip,curl,date,upload,mysql,sqlitei,redis,,rabbitMq,mongodb
todo
es,
js upload jquery
debian crontab
nginx
golong
ide sublime phpstorm
git</description>
    </item>
    
  </channel>
</rss>