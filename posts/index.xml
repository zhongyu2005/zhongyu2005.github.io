<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Spade Three</title>
    <link>http://zhongyu2005.github.io/posts/</link>
    <description>Recent content in Posts on Spade Three</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 29 Oct 2019 19:09:38 +0800</lastBuildDate>
    
	<atom:link href="http://zhongyu2005.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Php Db</title>
      <link>http://zhongyu2005.github.io/posts/php-db/</link>
      <pubDate>Tue, 29 Oct 2019 19:09:38 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-db/</guid>
      <description>php sqlite public function getSqlite($path) { if (empty($this-&amp;gt;dbs[$path])) { $this-&amp;gt;dbs[$path] = new \SQLite3($path); } return $this-&amp;gt;dbs[$path]; } public function dbExec($db, $sql,$bindParam) { $sm=$db-&amp;gt;prepare($sql); if(!empty($bindParam)){ foreach ($bindParam as $key=&amp;gt;$val) { $sm-&amp;gt;bindValue($key, $val); } } return $sm-&amp;gt;execute(); // $db-&amp;gt;lastErrorMsg() } public function dbQueryOne($db, $sql,$bindParam) { $sm=$db-&amp;gt;prepare($sql); if(!empty($bindParam)){ foreach ($bindParam as $key=&amp;gt;$val) { $sm-&amp;gt;bindValue($key, $val); } } $res = $sm-&amp;gt;execute(); $row = $res-&amp;gt;fetchArray(SQLITE3_ASSOC); return $row; } public function dbQueryAll($db, $sql,$bindParam) { $sm=$db-&amp;gt;prepare($sql); if(!</description>
    </item>
    
    <item>
      <title>Php Upload</title>
      <link>http://zhongyu2005.github.io/posts/php-upload/</link>
      <pubDate>Tue, 29 Oct 2019 19:04:51 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-upload/</guid>
      <description>upload php $file = $_FILES[&#39;file&#39;]; if (empty($file)) { return log(&amp;quot;未获取到上传数据&amp;quot;, 1); } $maxSize = 1024 * 1024 * 3;//3m if ($file[&#39;size&#39;] &amp;gt; $maxSize) { return log(&amp;quot;上传数据大小超过限制&amp;quot;, 1); } if (!in_array($file[&#39;type&#39;], [&#39;image/jpeg&#39;, &#39;image/png&#39;, &#39;image/gif&#39;])) { log(&amp;quot;上传文件类型不正确&amp;quot;, 1); } $suffix = pathinfo($file[&#39;name&#39;], PATHINFO_EXTENSION); //文件后缀 $suffix = strtolower($suffix); if (!in_array($suffix, array(&#39;jpg&#39;, &#39;png&#39;, &#39;gif&#39;, &#39;jpeg&#39;))) { return log(&amp;quot;上传文件类型不正确&amp;quot;, 1); } $path = __DIR__ . &#39;/img&#39;; $name = &#39;/&#39; . date(&amp;quot;Ym&amp;quot;) . &#39;/&#39; . md5(uniqid(&#39;dp&#39;, true)) .</description>
    </item>
    
    <item>
      <title>Php Date</title>
      <link>http://zhongyu2005.github.io/posts/php-date/</link>
      <pubDate>Tue, 29 Oct 2019 18:54:57 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-date/</guid>
      <description> php date $date = new \DateTime(null, new \DateTimeZone(&amp;quot;PRC&amp;quot;)); $ymd = $date-&amp;gt;format(&amp;quot;Y-m-d H:i:s&amp;quot;); $time = $date-&amp;gt;getTimestamp(); $date-&amp;gt;modify(&amp;quot;-1 day -1 hour &amp;quot;);//减一天，减一个小时 $date-&amp;gt;modify(&amp;quot;this week today&amp;quot;);//本周第一天，周一开始，仅保留年月日 $diff=$date-&amp;gt;diff(new \DateTime(&#39;20191001&#39;,new \DateTimeZone(&amp;quot;PRC&amp;quot;))); $s=$diff-&amp;gt;format(&amp;quot;相差%Y年%m月%d日 %H时%i分%s秒&amp;quot;);  </description>
    </item>
    
    <item>
      <title>Php Curl</title>
      <link>http://zhongyu2005.github.io/posts/php-curl/</link>
      <pubDate>Tue, 29 Oct 2019 18:48:41 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-curl/</guid>
      <description>curl commonfunc function http($url, $data, $params = [], &amp;amp;$error) { $timeout = isset($params[&#39;timeout&#39;]) ? $params[&#39;timeout&#39;] : 10; // 默认超时时间是10秒 $curl = curl_init(); curl_setopt($curl, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0); curl_setopt($curl, CURLOPT_URL, $url); curl_setopt($curl, CURLOPT_TIMEOUT, $timeout); //超时时间 curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 0); //在发起连接前等待的时间，如果设置为0，则不等待 if (!empty($data)) { curl_setopt($curl, CURLOPT_POST, 1); curl_setopt($curl, CURLOPT_POSTFIELDS, $data); } curl_setopt($curl, CURLOPT_SSLVERSION, 1); //升级ssl curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); //ssl curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false); //ssl curl_setopt($curl, CURLINFO_HEADER_OUT, true); $UserAgent = &#39;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.</description>
    </item>
    
    <item>
      <title>Php Ip</title>
      <link>http://zhongyu2005.github.io/posts/php-ip/</link>
      <pubDate>Tue, 29 Oct 2019 18:47:31 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-ip/</guid>
      <description> php getId function getIP() { if (isset($_SERVER)) { if (isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;])) { $realip = $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]; } elseif (isset($_SERVER[&#39;HTTP_CLIENT_IP&#39;])) { $realip = $_SERVER[&#39;HTTP_CLIENT_IP&#39;]; } else { $realip = $_SERVER[&#39;REMOTE_ADDR&#39;]; } } else { if (getenv(&amp;quot;HTTP_X_FORWARDED_FOR&amp;quot;)) { $realip = getenv( &amp;quot;HTTP_X_FORWARDED_FOR&amp;quot;); } elseif (getenv(&amp;quot;HTTP_CLIENT_IP&amp;quot;)) { $realip = getenv(&amp;quot;HTTP_CLIENT_IP&amp;quot;); } else { $realip = getenv(&amp;quot;REMOTE_ADDR&amp;quot;); } } if(empty($realip) || strtolower($realip)==&#39;unknown&#39;){ return &#39;&#39;; } return $realip; }  </description>
    </item>
    
    <item>
      <title>Php Filter</title>
      <link>http://zhongyu2005.github.io/posts/php-filter/</link>
      <pubDate>Tue, 29 Oct 2019 18:35:24 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-filter/</guid>
      <description>filter 验证 ip $ip = &amp;quot;192.168.0.1&amp;quot;; //$ip = &amp;quot;2001:0db8:85a3:08d3:1319:8a2e:0370:7334&amp;quot;; if(!filter_var($ip, FILTER_VALIDATE_IP,FILTER_FLAG_IPV6)){ echo &amp;quot;IP is not valid&amp;quot;; }else { echo &amp;quot;IP is valid&amp;quot;; }  filter 验证 email $email = &amp;quot;someone@example.com&amp;quot;; if(!filter_var($email, FILTER_VALIDATE_EMAIL)){ echo &amp;quot;E-mail is not valid&amp;quot;; }else{ echo &amp;quot;E-mail is valid&amp;quot;; }  filter 验证 email $email = &amp;quot;someone@example.com&amp;quot;; if(!filter_var($email, FILTER_VALIDATE_EMAIL)){ echo &amp;quot;E-mail is not valid&amp;quot;; }else{ echo &amp;quot;E-mail is valid&amp;quot;; }  filter 验证 email $url = &amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Php Composer</title>
      <link>http://zhongyu2005.github.io/posts/php-composer/</link>
      <pubDate>Tue, 29 Oct 2019 18:14:49 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-composer/</guid>
      <description>composer php -r &amp;quot;copy(&#39;https://getcomposer.org/installer&#39;, &#39;composer-setup.php&#39;);&amp;quot; php -r &amp;quot;if (hash_file(&#39;sha384&#39;, &#39;composer-setup.php&#39;) === &#39;a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1&#39;) { echo &#39;Installer verified&#39;; } else { echo &#39;Installer corrupt&#39;; unlink(&#39;composer-setup.php&#39;); } echo PHP_EOL;&amp;quot; php composer-setup.php php -r &amp;quot;unlink(&#39;composer-setup.php&#39;);&amp;quot; echo @php &amp;quot;%~dp0composer.phar&amp;quot; %*&amp;gt;composer.bat composer -V php composer.phar self-update  composer use  php composer.phar create-project doctrine/orm path 2.2.* AND php composer.phar require xxx php composer.phar remove xxx OR edit composer.json php composer.phar install php composer.phar update php composer.</description>
    </item>
    
    <item>
      <title>Php Ini</title>
      <link>http://zhongyu2005.github.io/posts/php-ini/</link>
      <pubDate>Tue, 29 Oct 2019 17:55:38 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/php-ini/</guid>
      <description>ini_set ini_set(&#39;display_errors&#39;, true);//开启错误信息显示 ini_set(&amp;quot;error_log&amp;quot;, __DIR__.&#39;/&#39;. date(&#39;Y-m-d&#39;) . &amp;quot;.log&amp;quot;);//设置php错误路径 ini_set(&#39;date.timezone&#39;,&#39;Asia/Shanghai&#39;); ini_set(&#39;max_execution_time&#39;, 0);//不限制执行时间 ini_set(&#39;magic_quotes_runtime&#39;, 0);//关闭自动反斜线转移引号 ini_set(&#39;memory_limit&#39;, &#39;512M&#39;); ignore_user_abort(true); // 后台运行 set_time_limit(0); // 取消脚本运行时间的超时上限  header  header(&amp;quot;Content-type: text/html; charset=utf-8&amp;quot;); header(&#39;Content-Type:application/json; charset=utf-8&#39;); header(&#39;Access-Control-Allow-Origin:*&#39;); header(&amp;quot;Access-Control-Allow-Methods&amp;quot;,&amp;quot;POST&amp;quot;); header(&amp;quot;Access-Control-Allow-Credentials&amp;quot;,&amp;quot;true&amp;quot;); header(&#39;Access-Control-Allow-Headers:x-requested-with,content-type&#39;); header(&amp;quot;HTTP/1.1 404 Not Found&amp;quot;); header(&amp;quot;Status: 404 Not Found&amp;quot;);  memory  function getMemory($real = false) { $size = memory_get_usage($real); $unit = array(&#39;b&#39;, &#39;kb&#39;, &#39;mb&#39;, &#39;gb&#39;, &#39;tb&#39;, &#39;pb&#39;); return @round($size / pow(1024, ($i = floor(log($size, 1024)))), 2) .</description>
    </item>
    
    <item>
      <title>welcome</title>
      <link>http://zhongyu2005.github.io/posts/welcome/</link>
      <pubDate>Tue, 29 Oct 2019 12:51:26 +0800</pubDate>
      
      <guid>http://zhongyu2005.github.io/posts/welcome/</guid>
      <description> Welcom to spade. hugo help
hugo version hugo new site xxx hugo new posts/welcome.md hugo server -D hugo (cp -R public ../../spade.github.io)  config.tomal
baseURL = &amp;quot;http://zhongyu2005.github.io&amp;quot; languageCode = &amp;quot;en-us&amp;quot; title = &amp;quot;Spade Three&amp;quot; theme = &amp;quot;ananke&amp;quot; [taxonomies] tag = &amp;quot;tags&amp;quot;  posts/welcome.md
--- title: &amp;quot;welcome&amp;quot; date: 2019-10-29T12:51:26+08:00 tags: [&amp;quot;welcome&amp;quot;] --- Welcom to spade. xxxx  </description>
    </item>
    
  </channel>
</rss>